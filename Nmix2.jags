
    model{
    # Priors
    for (k in 1:4){
    alpha.lam[k] ~ dnorm(0, 0.1)
    beta[k] ~ dnorm(0, 0.1)
    }
    
    # Abundance site and detection site-by-day random effects
    for (i in 1:R){
    eps[i] ~ dnorm(0, tau.lam)                    # Abundance noise
    }
    tau.lam <- 1 / (sd.lam * sd.lam)
    sd.lam ~ dunif(0, 3)
    tau.p <- 1 / (sd.p * sd.p)
    sd.p ~ dunif(0, 3)
    
    # Likelihood
    # Ecological model for true abundance
    for (i in 1:R){                                 # Loop over R sites (95)
    for (k in 1:4){                              # Loop over days (7)
    N[i,k] ~ dpois(lambda[i,k])               # Abundance
    log(lambda[i,k]) <- alpha.lam[k] + eps[i]
    
    # Observation model for replicated counts
    for (j in 1:T){                           # Loop over temporal reps (2)
    yy[i,j,k] ~ dbin(p[i,j,k], N[i,k])      # Detection
    p[i,j,k] <- 1 / (1 + exp(-lp[i,j,k])) 
    lp[i,j,k] ~ dnorm(beta[k], tau.p) # random delta defined implicitly
    
    # Assess model fit using Chi-squared discrepancy
    # Compute fit statistic for observed data
    eval[i,j,k] <- p[i,j,k] * N[i,k]
    E[i,j,k] <- pow((yy[i,j,k] - eval[i,j,k]),2) / (eval[i,j,k]+0.5)
    # Generate replicate data and compute fit stats for them
    y.new[i,j,k] ~ dbin(p[i,j,k], N[i,k])
    E.new[i,j,k] <- pow((y.new[i,j,k] - eval[i,j,k]),2) / (eval[i,j,k]+0.5)
    } #j
    ik.p[i,k] <- mean(p[i,,k])
    } #k
    } #i
    
    # Derived and other quantities
    for (k in 1:4){
    totalN[k] <- sum(N[,k])   # Estimate total pop. size across all sites
    mean.abundance[k] <- mean(lambda[,k])
    mean.N[k] <- mean(N[,k])
    mean.detection[k] <- mean(ik.p[,k])
    }
    fit <- sum(E[,,])
    fit.new <- sum(E.new[,,])
    }
    
